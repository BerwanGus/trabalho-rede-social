# -*- coding: utf-8 -*-
"""Aula Machine Learning.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aeq4S3EkIpU_0L2-4EsQDi5bqasUW0xv
"""

import numpy as np
from matplotlib import pyplot as plt

from sklearn import tree
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import classification_report
from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay

# Coleta e Preparação de Dados.
iris = load_iris()
X = iris.data # caracteristica
y = iris.target # rotulos

# Divisão dos Dados em Treinamento e Teste.
X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=0)

# Escolha do Algoritmo de Machine Learning.
# clf = KNeighborsClassifier(n_neighbors=3)
# clf = SVC()
# clf = MLPClassifier(random_state=1, max_iter=300)
# clf = RandomForestClassifier(max_depth=2, random_state=0)
clf = DecisionTreeClassifier(max_leaf_nodes=4, random_state=0)


# Treinamento do Modelo.
clf.fit(X_train, y_train)

# Teste / Previsão do Modelo.
y_pred = clf.predict(X_test)

print(f'PRED: {y_pred}')
print(f'RESPOSTA: {y_test}')

# Análise dos Resultados.
print()
print(classification_report(y_test, y_pred))
cm = confusion_matrix(y_test, y_pred)

classes = iris.target_names.tolist()
disp = ConfusionMatrixDisplay(confusion_matrix=cm, display_labels=classes)

disp.plot()
plt.show()